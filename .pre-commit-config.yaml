# Configuration pre-commit pour Modern Phone Checker
repos:
  # Hooks généraux
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: debug-statements
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-case-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Formatage Python avec Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Tri des imports avec isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Linting avec flake8
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Type checking avec mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports, --install-types, --non-interactive]

  # Sécurité avec bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']

  # Vérification des requirements
  - repo: https://github.com/jazzband/pip-tools
    rev: 7.3.0
    hooks:
      - id: pip-compile
        files: ^requirements\.in$
        args: [--generate-hashes, --allow-unsafe]

  # Hooks spécifiques au projet
  - repo: local
    hooks:
      # Tests rapides
      - id: pytest-quick
        name: Run quick tests
        entry: python -m pytest tests/ -x --tb=short -q
        language: system
        types: [python]
        pass_filenames: false
        stages: [commit]

      # Vérification de la santé du projet
      - id: health-check
        name: Project health check
        entry: python -c "import phone_checker; print('✅ Phone Checker OK')"
        language: system
        pass_filenames: false
        stages: [push]

      # Vérification de la configuration
      - id: config-check
        name: Configuration validation
        entry: python -c "from phone_checker.config import default_config; print('✅ Config OK')"
        language: system
        pass_filenames: false
        stages: [commit]

# Configuration globale
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# Exclusions globales
exclude: |
  (?x)^(
      \.git/.*|
      \.venv/.*|
      venv/.*|
      __pycache__/.*|
      \.pytest_cache/.*|
      \.mypy_cache/.*|
      build/.*|
      dist/.*|
      \.cache/.*|
      logs/.*
  )$

# Configuration des repos par défaut
default_language_version:
  python: python3.11

# Messages personnalisés
repos:
  - repo: local
    hooks:
      - id: commit-msg-check
        name: Check commit message format
        entry: python -c "
import sys
import re

commit_msg = sys.argv[1] if len(sys.argv) > 1 else ''
with open(commit_msg, 'r') as f:
    msg = f.read().strip()

# Pattern pour les messages de commit
patterns = [
    r'^(feat|fix|docs|style|refactor|test|chore|perf|ci)(\(.+\))?: .{1,50}',
    r'^(add|update|remove|improve|fix): .{1,50}',
    r'^.{1,50}'  # Fallback pour les messages simples
]

if not any(re.match(pattern, msg, re.IGNORECASE) for pattern in patterns):
    print('❌ Format de message de commit non standard')
    print('💡 Exemples valides:')
    print('   feat: add WhatsApp verification')
    print('   fix(cache): resolve memory leak issue')
    print('   docs: update installation guide')
    sys.exit(1)
else:
    print('✅ Format de commit valide')
"
        language: system
        stages: [commit-msg]
        pass_filenames: false
